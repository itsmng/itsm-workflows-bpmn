doctype html
html(lang="en")
	head
		meta(charset="UTF-8")
		meta(name="viewport" content="width=device-width, initial-scale=1.0")
		title Multi-Column Table Filtering
		script(src="https://code.jquery.com/jquery-3.6.0.min.js")
		style.
			table {
				width: 100%;
				border-collapse: collapse;
				margin-top: 10px;
			}
			th, td {
				border: 1px solid #ddd;
				padding: 8px;
				text-align: left;
			}
			th {
				background-color: #f2f2f2;
			}
			.filter-input, .filter-dropdown {
				width: 100%;
				box-sizing: border-box;
				padding: 6px;
			}
	
	body
		table#dataTable
			thead
				tr
					th: input.filter-input(type="text", data-column="0", placeholder="Search Name")
					th: input.filter-input(type="text", data-column="1", placeholder="Search Model")
					th: input.filter-input(type="text", data-column="2", placeholder="Search CaseId")
					th: input.filter-input(type="text", data-column="3", placeholder="Search Started")
					th: input.filter-input(type="text", data-column="4", placeholder="Search Action")
					th: input.filter-input(type="text", data-column="5", placeholder="Search Assignee")
					th
						select.filter-dropdown(data-column="6")
							option(value="") All Candidate Users
					th
						select.filter-dropdown(data-column="7")
							option(value="") All Candidate Groups
					th: input.filter-input(type="text", data-column="8", placeholder="Search Due Date")
					th: input.filter-input(type="text", data-column="9", placeholder="Search Follow-up Date")
					th: input.filter-input(type="text", data-column="10", placeholder="Search Priority")
				tr
					th Name
					th Model
					th CaseId
					th Started
					th Action
					th Assignee
					th Candidate Users
					th Candidate Groups
					th Due date
					th Follow-up date
					th Priority
			tbody
			each item in waiting
				- var ref1 = "/invokeItem?id="+item.id+"&processName="+item.processName+"&elementId="+item.elementId;
				- var ref2 = "/assign?id="+item.id+"&processName="+item.processName+"&elementId="+item.elementId;

				tr
					td #{item.name} - #{item.elementId} - #{item.itemKey}
					td #{item.processName} 
					td #{item.instanceData.caseId}
					td #{item.fromNow}
					td
						if (user.userName==item.assignee)  || user.isAdmin()
							a(href=`${ref1}`) Execute
							<br />
						a(href=`${ref2}`) Assign
					td #{item.assignee}
					if user && user.isAdmin()
						td #{item.candidateUsers}
						td #{item.candidateGroups}
					td #{item.dueFrom}
					td #{item.followFrom}
					td #{item.priority}
		script.
			$(document).ready(function(){
				function populateDropdown(columnIndex, dropdownSelector) {
					let uniqueValues = new Set();
					$("#dataTable tbody tr").each(function() {
						let value = $(this).find("td").eq(columnIndex).text().trim();
						if (value) uniqueValues.add(value);
					});

					$(dropdownSelector).empty().append('<option value="">All</option>');
					uniqueValues.forEach(value => {
						$(dropdownSelector).append(`<option value="${value}">${value}</option>`);
					});
				}

				// Populate dropdowns dynamically
				populateDropdown(6, ".filter-dropdown[data-column='6']");
				populateDropdown(7, ".filter-dropdown[data-column='7']");

				function filterTable() {
					$("#dataTable tbody tr").each(function() {
						let row = $(this);
						let visible = true;

						$(".filter-input, .filter-dropdown").each(function() {
							let columnIndex = $(this).data("column");
							let searchValue = $(this).val().toLowerCase();
							let cellText = row.find("td").eq(columnIndex).text().toLowerCase();

							if (searchValue && cellText.indexOf(searchValue) === -1) {
								visible = false;
							}
						});

						row.toggle(visible);
					});
				}

				// Attach event listeners for filtering
				$(".filter-input").on("keyup", filterTable);
				$(".filter-dropdown").on("change", filterTable);
			});
